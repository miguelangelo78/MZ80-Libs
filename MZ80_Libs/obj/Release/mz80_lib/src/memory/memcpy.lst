                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.4.0 #8981 (Apr  5 2014) (MINGW64)
                              4 ; This file was generated Tue Dec 23 18:07:59 2014
                              5 ;--------------------------------------------------------
                              6 	.module memcpy
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _memcpy
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;mz80_lib\src\memory\memcpy.c:3: void * memcpy (void *dst, const void *src, size_t acount) {
                             45 ;	---------------------------------
                             46 ; Function memcpy
                             47 ; ---------------------------------
   0000                      48 _memcpy_start::
   0000                      49 _memcpy:
   0000 DD E5         [15]   50 	push	ix
   0002 DD 21 00 00   [14]   51 	ld	ix,#0
   0006 DD 39         [15]   52 	add	ix,sp
   0008 F5            [11]   53 	push	af
                             54 ;mz80_lib\src\memory\memcpy.c:4: char *d = dst;
   0009 DD 7E 04      [19]   55 	ld	a,4 (ix)
   000C DD 77 FE      [19]   56 	ld	-2 (ix),a
   000F DD 7E 05      [19]   57 	ld	a,5 (ix)
   0012 DD 77 FF      [19]   58 	ld	-1 (ix),a
                             59 ;mz80_lib\src\memory\memcpy.c:5: const char *s = src;
   0015 DD 5E 06      [19]   60 	ld	e,6 (ix)
   0018 DD 56 07      [19]   61 	ld	d,7 (ix)
                             62 ;mz80_lib\src\memory\memcpy.c:6: while (acount--){
   001B DD 4E 08      [19]   63 	ld	c,8 (ix)
   001E DD 46 09      [19]   64 	ld	b,9 (ix)
   0021                      65 00101$:
   0021 61            [ 4]   66 	ld	h,c
   0022 68            [ 4]   67 	ld	l,b
   0023 0B            [ 6]   68 	dec	bc
   0024 7D            [ 4]   69 	ld	a,l
   0025 B4            [ 4]   70 	or	a,h
   0026 28 0F         [12]   71 	jr	Z,00103$
                             72 ;mz80_lib\src\memory\memcpy.c:7: *d++ = *s++;
   0028 1A            [ 7]   73 	ld	a,(de)
   0029 13            [ 6]   74 	inc	de
   002A E1            [10]   75 	pop	hl
   002B E5            [11]   76 	push	hl
   002C 77            [ 7]   77 	ld	(hl),a
   002D DD 34 FE      [23]   78 	inc	-2 (ix)
   0030 20 EF         [12]   79 	jr	NZ,00101$
   0032 DD 34 FF      [23]   80 	inc	-1 (ix)
   0035 18 EA         [12]   81 	jr	00101$
   0037                      82 00103$:
                             83 ;mz80_lib\src\memory\memcpy.c:9: return dst;
   0037 DD 6E 04      [19]   84 	ld	l,4 (ix)
   003A DD 66 05      [19]   85 	ld	h,5 (ix)
   003D DD F9         [10]   86 	ld	sp, ix
   003F DD E1         [14]   87 	pop	ix
   0041 C9            [10]   88 	ret
   0042                      89 _memcpy_end::
                             90 	.area _CODE
                             91 	.area _INITIALIZER
                             92 	.area _CABS (ABS)
