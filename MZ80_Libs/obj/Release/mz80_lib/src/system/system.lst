                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.4.0 #8981 (Apr  5 2014) (MINGW64)
                              4 ; This file was generated Tue Dec 23 18:07:59 2014
                              5 ;--------------------------------------------------------
                              6 	.module system
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _out
                             13 	.globl _is_init
                             14 	.globl _init_pio
                             15 	.globl _init_lcd
                             16 	.globl _init_io
                             17 	.globl _init
                             18 	.globl _clock_throttle
                             19 	.globl _delay_ms
                             20 	.globl _delay_sec
                             21 	.globl _end
                             22 ;--------------------------------------------------------
                             23 ; special function registers
                             24 ;--------------------------------------------------------
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DATA
                             29 ;--------------------------------------------------------
                             30 ; ram data
                             31 ;--------------------------------------------------------
                             32 	.area _INITIALIZED
   0000                      33 _is_init::
   0000                      34 	.ds 1
                             35 ;--------------------------------------------------------
                             36 ; absolute external ram data
                             37 ;--------------------------------------------------------
                             38 	.area _DABS (ABS)
                             39 ;--------------------------------------------------------
                             40 ; global & static initialisations
                             41 ;--------------------------------------------------------
                             42 	.area _HOME
                             43 	.area _GSINIT
                             44 	.area _GSFINAL
                             45 	.area _GSINIT
                             46 ;--------------------------------------------------------
                             47 ; Home
                             48 ;--------------------------------------------------------
                             49 	.area _HOME
                             50 	.area _HOME
                             51 ;--------------------------------------------------------
                             52 ; code
                             53 ;--------------------------------------------------------
                             54 	.area _CODE
                             55 ;mz80_lib\src\system\system.c:5: void init_pio(){
                             56 ;	---------------------------------
                             57 ; Function init_pio
                             58 ; ---------------------------------
   0000                      59 _init_pio_start::
   0000                      60 _init_pio:
                             61 ;mz80_lib\src\system\system.c:9: __endasm;
   0000 3E 82         [ 7]   62 	LD A,#130
   0002 D3 03         [11]   63 	OUT (#3),A
   0004 C9            [10]   64 	ret
   0005                      65 _init_pio_end::
                             66 ;mz80_lib\src\system\system.c:12: void init_lcd(){
                             67 ;	---------------------------------
                             68 ; Function init_lcd
                             69 ; ---------------------------------
   0005                      70 _init_lcd_start::
   0005                      71 _init_lcd:
                             72 ;mz80_lib\src\system\system.c:18: __endasm;
   0005 3E 0F         [ 7]   73 	LD A,#0x0F
   0007 D3 02         [11]   74 	OUT (#2),A
   0009 3E 00         [ 7]   75 	LD A,#0
   000B D3 0E         [11]   76 	OUT (#6 +8),A
   000D C9            [10]   77 	ret
   000E                      78 _init_lcd_end::
                             79 ;mz80_lib\src\system\system.c:21: void init_io(){
                             80 ;	---------------------------------
                             81 ; Function init_io
                             82 ; ---------------------------------
   000E                      83 _init_io_start::
   000E                      84 _init_io:
                             85 ;mz80_lib\src\system\system.c:22: init_pio();
   000E CDr00r00      [17]   86 	call	_init_pio
                             87 ;mz80_lib\src\system\system.c:23: init_lcd();
   0011 C3r05r00      [10]   88 	jp	_init_lcd
   0014                      89 _init_io_end::
                             90 ;mz80_lib\src\system\system.c:26: void init(){
                             91 ;	---------------------------------
                             92 ; Function init
                             93 ; ---------------------------------
   0014                      94 _init_start::
   0014                      95 _init:
                             96 ;mz80_lib\src\system\system.c:28: is_init = true;
   0014 21r00r00      [10]   97 	ld	hl,#_is_init + 0
   0017 36 01         [10]   98 	ld	(hl), #0x01
                             99 ;mz80_lib\src\system\system.c:29: init_io();
   0019 C3r0Er00      [10]  100 	jp	_init_io
   001C                     101 _init_end::
                            102 ;mz80_lib\src\system\system.c:32: void clock_throttle(char option){
                            103 ;	---------------------------------
                            104 ; Function clock_throttle
                            105 ; ---------------------------------
   001C                     106 _clock_throttle_start::
   001C                     107 _clock_throttle:
                            108 ;mz80_lib\src\system\system.c:33: out(CLOCK_THROTTLE,option);
   001C 21 02 00      [10]  109 	ld	hl, #2+0
   001F 39            [11]  110 	add	hl, sp
   0020 56            [ 7]  111 	ld	d, (hl)
   0021 1E 1C         [ 7]  112 	ld	e,#0x1C
   0023 D5            [11]  113 	push	de
   0024 CDr00r00      [17]  114 	call	_out
   0027 F1            [10]  115 	pop	af
   0028 C9            [10]  116 	ret
   0029                     117 _clock_throttle_end::
                            118 ;mz80_lib\src\system\system.c:36: void delay_ms(char ms){
                            119 ;	---------------------------------
                            120 ; Function delay_ms
                            121 ; ---------------------------------
   0029                     122 _delay_ms_start::
   0029                     123 _delay_ms:
                            124 ;mz80_lib\src\system\system.c:38: for(i=0;i<ms;i++){} // THIS FUNCTION IS VERY INACCURATE
   0029 16 00         [ 7]  125 	ld	d,#0x00
   002B                     126 00103$:
   002B 21 02 00      [10]  127 	ld	hl,#2
   002E 39            [11]  128 	add	hl,sp
   002F 7A            [ 4]  129 	ld	a,d
   0030 96            [ 7]  130 	sub	a, (hl)
   0031 E2r36r00      [10]  131 	jp	PO, 00116$
   0034 EE 80         [ 7]  132 	xor	a, #0x80
   0036                     133 00116$:
   0036 F0            [11]  134 	ret	P
   0037 14            [ 4]  135 	inc	d
   0038 18 F1         [12]  136 	jr	00103$
   003A C9            [10]  137 	ret
   003B                     138 _delay_ms_end::
                            139 ;mz80_lib\src\system\system.c:41: void delay_sec(char sec){
                            140 ;	---------------------------------
                            141 ; Function delay_sec
                            142 ; ---------------------------------
   003B                     143 _delay_sec_start::
   003B                     144 _delay_sec:
                            145 ;mz80_lib\src\system\system.c:43: for(i=0;i<sec;i++) delay_ms(DELAY_1SEC);
   003B 16 00         [ 7]  146 	ld	d,#0x00
   003D                     147 00103$:
   003D 21 02 00      [10]  148 	ld	hl,#2
   0040 39            [11]  149 	add	hl,sp
   0041 7A            [ 4]  150 	ld	a,d
   0042 96            [ 7]  151 	sub	a, (hl)
   0043 E2r48r00      [10]  152 	jp	PO, 00116$
   0046 EE 80         [ 7]  153 	xor	a, #0x80
   0048                     154 00116$:
   0048 F0            [11]  155 	ret	P
   0049 D5            [11]  156 	push	de
   004A 3E 14         [ 7]  157 	ld	a,#0x14
   004C F5            [11]  158 	push	af
   004D 33            [ 6]  159 	inc	sp
   004E CDr29r00      [17]  160 	call	_delay_ms
   0051 33            [ 6]  161 	inc	sp
   0052 D1            [10]  162 	pop	de
   0053 14            [ 4]  163 	inc	d
   0054 18 E7         [12]  164 	jr	00103$
   0056 C9            [10]  165 	ret
   0057                     166 _delay_sec_end::
                            167 ;mz80_lib\src\system\system.c:46: void end(){
                            168 ;	---------------------------------
                            169 ; Function end
                            170 ; ---------------------------------
   0057                     171 _end_start::
   0057                     172 _end:
   0057                     173 00103$:
   0057 18 FE         [12]  174 	jr	00103$
   0059                     175 _end_end::
                            176 	.area _CODE
                            177 	.area _INITIALIZER
   0000                     178 __xinit__is_init:
   0000 00                  179 	.db #0x00	; 0
                            180 	.area _CABS (ABS)
