                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.4.0 #8981 (Apr  5 2014) (MINGW64)
                              4 ; This file was generated Tue Dec 23 03:03:37 2014
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _itos
                             14 	.globl _uart_print_str
                             15 	.globl _uart_print_char
                             16 	.globl _uart_end
                             17 	.globl _uart_begin
                             18 ;--------------------------------------------------------
                             19 ; special function registers
                             20 ;--------------------------------------------------------
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _DATA
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area _INITIALIZED
                             29 ;--------------------------------------------------------
                             30 ; absolute external ram data
                             31 ;--------------------------------------------------------
                             32 	.area _DABS (ABS)
                             33 ;--------------------------------------------------------
                             34 ; global & static initialisations
                             35 ;--------------------------------------------------------
                             36 	.area _HOME
                             37 	.area _GSINIT
                             38 	.area _GSFINAL
                             39 	.area _GSINIT
                             40 ;--------------------------------------------------------
                             41 ; Home
                             42 ;--------------------------------------------------------
                             43 	.area _HOME
                             44 	.area _HOME
                             45 ;--------------------------------------------------------
                             46 ; code
                             47 ;--------------------------------------------------------
                             48 	.area _CODE
                             49 ;main.c:8: void main(){
                             50 ;	---------------------------------
                             51 ; Function main
                             52 ; ---------------------------------
   0000                      53 _main_start::
   0000                      54 _main:
                             55 ;main.c:12: str=  (char *)0x2000;
   0000 11 00 20      [10]   56 	ld	de,#0x2000
   0003 06 01         [ 7]   57 	ld	b,#0x01
   0005                      58 00102$:
                             59 ;main.c:15: itos(i,str,10);
   0005 C5            [11]   60 	push	bc
   0006 D5            [11]   61 	push	de
   0007 3E 0A         [ 7]   62 	ld	a,#0x0A
   0009 F5            [11]   63 	push	af
   000A 33            [ 6]   64 	inc	sp
   000B D5            [11]   65 	push	de
   000C C5            [11]   66 	push	bc
   000D 33            [ 6]   67 	inc	sp
   000E CDr00r00      [17]   68 	call	_itos
   0011 F1            [10]   69 	pop	af
   0012 F1            [10]   70 	pop	af
   0013 D1            [10]   71 	pop	de
   0014 D5            [11]   72 	push	de
   0015 D5            [11]   73 	push	de
   0016 CDr00r00      [17]   74 	call	_uart_print_str
   0019 F1            [10]   75 	pop	af
   001A CDr00r00      [17]   76 	call	_uart_begin
   001D 3E 0D         [ 7]   77 	ld	a,#0x0D
   001F F5            [11]   78 	push	af
   0020 33            [ 6]   79 	inc	sp
   0021 CDr00r00      [17]   80 	call	_uart_print_char
   0024 33            [ 6]   81 	inc	sp
   0025 CDr00r00      [17]   82 	call	_uart_end
   0028 D1            [10]   83 	pop	de
   0029 C1            [10]   84 	pop	bc
                             85 ;main.c:14: for(;;i++){
   002A 04            [ 4]   86 	inc	b
   002B 18 D8         [12]   87 	jr	00102$
   002D                      88 _main_end::
                             89 	.area _CODE
                             90 	.area _INITIALIZER
                             91 	.area _CABS (ABS)
